//******************************************************************************
// YAYA　ゴーストテンプレート
// トーク辞書
//******************************************************************************


//******************************************************************************
// ランダムトーク
//******************************************************************************
RandomTalk
{
    TOSTR(EVAL(CHR(0x22)+RandomTalkEx()+CHR(0x22)))
}

//------------------------------------------------------------------------------
//ランダムトーク本体：この中にランダムトークを記載してください
//ここのみ常に ' ' で括って書いてください。
//上のRandomTalkの中身で%( )を展開していますので、" "を使わなくてもOKです。
//高速化対策
//------------------------------------------------------------------------------
RandomTalkEx : nonoverlap
{
	'\1\s[10]%(food)って食えるかな？\0\s[0]いいから食ってみろ‥\w5‥\w5\1\n\nおまえこそ‥\w5‥\e'
	'\0\s[0]これはトークチェインのテストです。\n\w5しりとりでもしますか。\w8\1\s[10]よし。\n\n\w5「ありあ」。\e:chain=siritori'
}

//------------------------------------------------------------------------------
//チェイントークのサンプル
//------------------------------------------------------------------------------
siritori
{{CHAIN
	"\0\s[0]ありあ、ね。あ、か‥‥。\n\w6「あんこ」。\e"
	{
		"\1\s[10]こ‥‥「ころんぶす」。\w8\0\s[0]渋ッ！\e"
		"\1\s[10]「コチュジャン」！\w6\0\s[0]はいマック朗の負けー。\e:chain=end"
	}
	"\0\s[0]す‥‥\w4す‥‥\w9「すみそ」。\w8\1\s[10]おまえこそ渋いな。\nそ\w5‥\w5‥\w9「ソヴィエト」。\e"
	"\0\s[0]ところてん。\w9\n\n‥\w4‥\w4あ。\1\s[10]はいおれの勝ちー。\w9\0\s[0]\n\nぅー。\e"
}}CHAIN

//******************************************************************************
//時報/重なり
//******************************************************************************

//------------------------------------------------------------------------------
//OnMinuteChangeイベント
//------------------------------------------------------------------------------

OnMinuteChange
{
	//---- 時間の分を見て 0 であれば時報。それ以外のときは重なり処理を行う

	if minute == 0
	{
		//---- 分 = 0 だったので時報
		"\0\s[0]%hour12時です。"
		--
		//---- 特定の時間（正午など）ではさらに追加で話す
		if hour == 12
		{
			"\n\nお昼ですよ、忙しくてもちゃんと食事を摂りましょうね。\w5\1\s[10]ん。"
		}
		elseif hour == 15
		{
			"\n\nおやつの時間です。\w5\1\s[10]ひと休みしようぜ。"
		}
		--
		"\e"
	}
	elseif AYATEMPLATE.mikireflag == 1
	{
		//---- 分 != 0 、かつ見切れていたら見切れ中のトークを行う
		MikireTalk
	}
	elseif reference[2] == 1
	{
		//---- 分 != 0 、かつ見切れておらず本体とkeroが重なっていたら重なり処理
		//---- 大抵はkero側を引き離す処理を行う
		"\0\s[0]重ならないでよっ。\1\s[10]ちぇー。\4\e"
	}
}


//******************************************************************************
//見切れ
//******************************************************************************

//------------------------------------------------------------------------------
//OnSecondChangeイベント
//1 秒毎に実行される。ここではあまり重い処理を行わないこと
//このテンプレートでは、見切れ処理のみ行っている
//---------------------------------------------------------------------------
OnSecondChange
{

	if AYATEMPLATE.mikireflag == 1 && reference[1] == 0
	{
		//---- 見切れの終了
		EndMikireTalk
	}
	AYATEMPLATE.mikireflag = reference[1]
}

//------------------------------------------------------------------------------
//見切れ中
//------------------------------------------------------------------------------
MikireTalk
{
	"\0\s[0]見切れてます。\1\s[10]‥‥\e"
}

//------------------------------------------------------------------------------
//見切れ終了
//------------------------------------------------------------------------------
EndMikireTalk
{
	"\0\s[0]見切れから復帰しました。\1\s[10]うむ。\e:chain=mikirego"
}


//------------------------------------------------------------------------------
//見切れ後の初回のランダムトークは見切れ関連のトークを行う。
//これをチェインで実現している
//------------------------------------------------------------------------------
mikirego
{{CHAIN
	"\0\s[0]見切れはいやなものだよ。\w8\1\s[10]「すまないけどちょっとどいててくれない？」ってことなんだから。/
		終了されるよりはマシだろ。\w8\0\n\nなるほどっ。\e"
}}CHAIN

//******************************************************************************
//サーフィス復元
//******************************************************************************

//------------------------------------------------------------------------------
//OnSurfaceRestoreイベント
//------------------------------------------------------------------------------
OnSurfaceRestore
{
	"\0\s[0]\1\s[10]\e"
}

//******************************************************************************
//トランスレータ
//******************************************************************************

//------------------------------------------------------------------------------
//OnTranslateイベント
//------------------------------------------------------------------------------
//もっとも単純な例。語尾変え（「。」→「にゅ。」）。
//動かないようにコメントアウトしています。
/*
OnTranslate
{
	_text = reference[0]
	_text = REPLACE(_text, "。", "にゅ。")
	_text
}
*/

//------------------------------------------------------------------------------
//OnTranslateInternalイベント
//------------------------------------------------------------------------------
//OnTranslateがYAYA→本体→YAYAと、一度本体を経由するのに対して、
//OnTranslateInternalはYAYA内部でのトランスレートです。
//そのため、reference変数などが変更されない状態でこの関数に渡されます。
//引数は、_argv[0]が、本体に渡す寸前のトークの内容です。
//動かないようにコメントアウトしています。
/*
OnTranslateInternal
{
	_text = reference[0]
	_text = REPLACE(_text, "。", "にゅ。")
	_text
}
*/
