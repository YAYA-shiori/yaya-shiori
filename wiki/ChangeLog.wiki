#labels Featured
=Tc535-3=
  * ダブルクオート等の処理が微妙におかしい問題を修正

=Tc535-2=
  * FREADENCODE、FREADBINの読み出しが途中で切れる問題を修正

=Tc535-1=
  * FREADENCODE追加
  * ヒアドキュメント機能追加

=Tc534-1=
  * LOADLIB / UNLOADLIBで2回目以降の読み込みの場合はload/unloadを呼ばないようにした
  * RE_OPTION追加、Perl互換正規表現オプションが使えます
  * 正規表現文字クラスがWin9x系でうまく動かない問題を修正

=Tc533-2=
  * FOPENでファイルを開くのに失敗すると落ちるひどい問題を修正

=Tc533-1=
  * 文字コードサポートを拡充
  * foreach文内部で列挙対象配列に変更を加えてもループ処理に問題が生じないように
  * FOPEN済みファイルへのFSIZEが通らない問題を修正
  * 擬似乱数初期化改良 - ほぼ同時起動したゴーストが同じ乱数系列を使わないように

=Tc532-1=
  * EXECUTE_WAIT追加
  * STRDECODE / STRENCODE追加 旧名はGETSTRURLENCODE / DECODE
  * ERASEVARで複数指定可能に
  * 設定ファイルにinclude指定追加
  * 設定ファイルのiolog指定は、玉にD&Dする使い方で強制onされるように

=Tc531-1=
  * CHARSETLIB / CHARSETLIBEXをいじった
   * [http://emily.shillest.net/ayaya/index.php?%E3%83%9E%E3%83%8B%E3%83%A5%E3%82%A2%E3%83%AB%2F%E9%96%A2%E6%95%B0%2FCHARSETLIB CHARSETLIB]
   * [http://emily.shillest.net/ayaya/index.php?%E3%83%9E%E3%83%8B%E3%83%A5%E3%82%A2%E3%83%AB%2F%E9%96%A2%E6%95%B0%2FCHARSETLIBEX CHARSETLIBEX]

=Tc530-3=
  * コメント処理がまたおかしかった問題を修正

=Tc530-2=
  * CHARSETLIBEXをロード前でも動くようにした
  * iolog,offしても完全にログを無効できなかった問題を修正

=Tc530-1=
  * FDIGESTに32bit CRC追加
  * LICENSEシステム関数追加（ライセンス表示）
  * {{{/* */}}} でのコメント処理の挙動が怪しかった問題を修正 (xenon/ponapalt)
  * FSEEKシステム関数追加（ファイルの現在位置移動）
  * FTELLシステム関数追加（ファイルの現在位置取得）
  * FOPENのアクセスモードに+相当を追加（ランダムアクセス）
   * 上記３つの追加により、ファイルのランダムアクセスが可能となりました。

=Tc529-2=
  * LETTONAMEで配列が代入できない問題を修正
  * FREADBIN / WRITEBINでデータが化ける問題を修正
  * FREADBINでデータ読み出し途中で意図せずファイル読み込み終了扱いになる問題修正
   * そのため、FOPENの引数にバイナリモードが追加された
  * DUMPVARシステム関数追加、変数内容をログファイルにダンプします。デバッグ用
  * 基礎設定ファイル（yaya.txt）に ignoreiolog オプション追加
   * OnSecondChangeなどでログが大量になる/見にくい のを防止するためのオプション
   
=Tc529-1=
  * SUBSTRの第二引数を負値にすると「文字列の最後から何番目」を示すように
  * || と && 演算子の処理最適化

=Tc528-4=
  * 符号1文字でも「正しい数値文字列」として認識していた問題を修正

=Tc528-3=
  * GETSTRURLDECODEがバグってたのを修正

=Tc528-2=
  * FATTRIBがディレクトリの日付情報を取れなかった問題を修正

=Tc528-1=
  * システム関数SETSETTING追加（なんだ！この「馬に乗馬する」的なネーミングは！）
  * 二項演算子を単項演算子のように誤って書いていた場合にエラーを吐かずに即落ちるひどい不具合を修正

=Tc527-2=
  * Win9x/Me上で正規表現関係の細かい不具合があったのを修正

=Tc527-1=
  * EXECUTE追加、外部アプリの実行が可能に
  * FDIGEST追加、MD5/SHA-1などのダイジェスト値計算が可能に
  * save.auto追加、自動保存のON/OFFが可能に

=Tc526-2=
  * FATTRIBを呼び出すたびにリソースリークするひどいバグを修正
  * FATTRIBがいつも-1を返すひどいバグを修正

=Tc526-1=
  * RMDIRが成功時に0を返していたひどい問題を修正（Windows上のみ）
  * FATTRIBが返す配列に日付情報追加
  * けっこう高速化

=Tc525-2=
  * FENUMが常に空変数(void)を返していたひどい問題を修正

=Tc525-1=
  * 整数かどうかを判定する処理を厳しくした
  * システム関数の解析・実行まわりの高速化

=Tc524-5=
  * sequentialでもnonoverlapと同じ「初期化直前の選択肢は除く」機能が動いてしまう問題を修正

=Tc524-4=
  * RE_SPLITで落ちる問題を修正

=Tc524-3=
  * メモリリークだらけになっていたのを修正

=Tc524-2=
  * 安定しないのでふつうのMTに差し戻し

=Tc524-1=
  * READFMO追加
  * 設定ファイルにsave.encode,onと書くとセーブファイルが暗号化
  * 乱数エンジンをSFMTに積み替え
  * 非Windows環境対応工事中

=Tc523-3=
  * "--"演算子で確定する候補がまったくなかった場合に落ちる問題を修正。

=Tc523-2=
  * 出力候補として空文字列が使えなかった問題を修正。特にarray指定とか悲惨なことに…

=Tc523-1=
  * GETTIMEの第一引数にEPOCHからの秒数指定可能に
  * GETSECCOUNT追加。time関数とmktime関数の役割を果たします。

=Tc522-1=
  * 未定義型を配列へ追加・代入する操作は、IARRAYを代入する時と同じように、削除もしくは無視されるようにした。
  * 辞書・requestの出力・ファイル入出力・セーブデータ・SAORI等外部DLLの文字コードを個別に設定できるようにした。
  * SINH / COSH / TANHを追加。これでだいたいCライブラリ並みに。

=Tc521-2=
  * RAND(0)を実行するだけで一発墜落するひどいバグを修正

=Tc521-1=
  * 文字列を「大小比較」できるようになった。要はC言語でいうstrcmp。ソート用。
  * GETSTRURLENCODE / GETSTRURLDECODE追加。

=Tc520-1=
  * リリース初版。517-901と同等品。

=Tc517-901=
  * 「未定義型」の導入
   * 定義されていない変数が持つ型です。文字列としては""（空文字列）と同等、数値としては0と同等に扱われます。
   * この導入で、未定義変数と数値演算をした時に文字列扱いされて変な結果になる問題が解消されました。
  * 0で割り算すると落ちる問題を修正
   * さすがに落ちるのはまずいのでチェックを入れました。
  * ランダム選択を指定している関数で選択の結果がなかった場合に落ちる場合がある問題を修正

=Tc516-901=
  * FREADBIN(filename,size,alternateof0)
  * FWRITEBIN(filename,data,alternateof0)
   * 文字コード変換をせずバイナリデータとして読む。第三パラメータはバイト値"0"の代わりになる文字。デフォルトは半角空白。
  * CHR(Int配列) も可能に
  * CHRCODE(文字列,文字の位置) も可能に
  * SAVEVARの第一パラメータにファイル名も渡せるように（省略可）
  * RESTOREVAR新設。これもファイル名を渡せるように（省略可）
   * 指定したセーブファイルから変数を復旧します。

=Tc515-902=
  * &color(Silver){SAORIの処理が全滅していた情けないバグを修正};

=Tc515-901=
  * シングルプロセスで複数のインスタンスを作れるようなコードにしてみた（実験的）

=Tc514-901=
  * &color(Silver){””や’’で囲まれた文字列の解析に失敗する場合がある問題を修正};

=Tc513-902=
  * LETTONAMEで変数展開までやっていた特大バグを修正

=Tc513-901=
  * aya5.txtの文字コードが反映されない問題修正
  * 演算時に型を「昇格」させる機能追加
   * 整数と実数の計算ではどちらも実数に変換して計算
   * 整数・実数と文字列の計算ではどちらも文字列に変換して計算
  * CHARSETLIBEX - すでに読み込まれたSAORIとの通信用文字コードを変更
  * 重複回避ランダム選択機能で、常に前回の選択は候補から除外するようにした
  * ビット演算機能
   * BITWISE_OR(int1,int2)
   * BITWISE_AND(int1,int2)
   * BITWISE_XOR(int1,int2)
   * BITWISE_NOT(int)
   * BITWISE_SHIFT(int,シフト量)
  * 中括弧閉じを忘れた場合にエラーを吐くように
  * ZEN2HAN/HAN2ZEN - 文字列の半角<->全角変換